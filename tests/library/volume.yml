- name: volume | create
  doboto_volume:
    token: "{{ lookup('env','DO_API_TOKEN') }}"
    action: create
    name: volume-create
    region: nyc1
    size_gigabytes: 1
    description: "A nice one"
  register: volume_create

- name: volume | create  | verify
  assert:
    that:
      - "{{ volume_create.changed }}"
      - "{{ volume_create.volume.name == 'volume-create' }}"
      - "{{ volume_create.volume.region.slug == 'nyc1' }}"
      - "{{ volume_create.volume.size_gigabytes == 1 }}"
      - "{{ volume_create.volume.description == 'A nice one' }}"
      - "{{ volume_create.volume.droplet_ids == [] }}"
    msg: "{{ volume_create }}"

- name: volume | list
  doboto_volume:
    action: list
  register: volume_list

- name: volume | list | verify
  assert:
    that:
      - "{{ volume_list.volumes[0].id == volume_create.volume.id }}"
    msg: "{{ volume_list }}"

- name: volume | present | exists
  doboto_volume:
    action: present
    name: volume-create
    region: nyc1
    size_gigabytes: 1
    description: "A nice one"
  register: volume_present_exists

- name: volume | present | exists | verify
  assert:
    that:
      - "{{ not volume_present_exists.changed }}"
      - "{{ volume_present_exists.volume.name == 'volume-create' }}"
      - "{{ volume_present_exists.volume.region.slug == 'nyc1' }}"
      - "{{ volume_present_exists.volume.size_gigabytes == 1 }}"
      - "{{ volume_present_exists.volume.description == 'A nice one' }}"
      - "{{ volume_present_exists.volume.droplet_ids == [] }}"
      - "{{ volume_present_exists.created is none }}"
    msg: "{{ volume_present_exists }}"

- name: volume | present | new
  doboto_volume:
    action: present
    name: volume-present
    region: nyc1
    size_gigabytes: 1
    description: "A nice one"
  register: volume_present_new

- name: volume | present | new | verify
  assert:
    that:
      - "{{ volume_present_new.changed }}"
      - "{{ volume_present_new.volume.name == 'volume-present' }}"
      - "{{ volume_present_new.volume.region.slug == 'nyc1' }}"
      - "{{ volume_present_new.volume.size_gigabytes == 1 }}"
      - "{{ volume_present_new.volume.description == 'A nice one' }}"
      - "{{ volume_present_new.volume.droplet_ids == [] }}"
      - "{{ volume_present_new.created == volume_present_new.volume }}"
    msg: "{{ volume_present_new }}"

- name: volume | info | by id
  doboto_volume:
    action: info
    id: "{{ volume_create.volume.id }}"
  register: volume_info_id

- name: volume | info | by id | verify
  assert:
    that:
      - "{{ volume_info_id.volume.name == 'volume-create' }}"
    msg: "{{ volume_info_id }}"

- name: volume | info | by name region
  doboto_volume:
    action: info
    name: volume-create
    region: nyc1
  register: volume_info_name_region

- name: volume | info | by name region | verify
  assert:
    that:
      - "{{ volume_info_name_region.volume.id == volume_create.volume.id }}"
    msg: "{{ volume_info_name_region }}"

- name: volume | snapshot | create
  doboto_volume:
    action: snapshot_create
    id: "{{ volume_create.volume.id }}"
    snapshot_name: bulletproof
  register: volume_snapshot_create

- name: volume | snapshot | create | verify
  assert:
    that:
      - "{{ volume_snapshot_create.snapshot.name == 'bulletproof' }}"
    msg: "{{ volume_snapshot_create }}"

- name: volume | snapshot | list
  doboto_volume:
    action: snapshot_list
    id: "{{ volume_create.volume.id }}"
  register: volume_snapshot_list

- name: volume | snapshot | list | verify
  assert:
    that:
      - "{{ volume_snapshot_list.snapshots[0] == volume_snapshot_create.snapshot }}"
    msg: "{{ volume_snapshot_list }}"

- name: volume | droplet | create
  doboto_droplet:
    action: create
    name: volume-droplet
    region: nyc1
    size: 1gb
    image: debian-7-0-x64
    wait: true
  register: volume_droplet

- name: volume | create | by snapshot
  doboto_volume:
    action: create
    name: volume-create-snapshot
    snapshot_id: "{{ volume_snapshot_create.snapshot.id }}"
    size_gigabytes: 2
    description: "A bad one"
    wait: true
  register: volume_create_snapshot

- name: volume | create  | verify | by snapshot
  assert:
    that:
      - "{{ volume_create_snapshot.volume.name == 'volume-create-snapshot' }}"
      - "{{ volume_create_snapshot.volume.region.slug == 'nyc1' }}"
      - "{{ volume_create_snapshot.volume.size_gigabytes == 1 }}"
      - "{{ volume_create_snapshot.volume.description == 'A bad one' }}"
      - "{{ volume_create_snapshot.volume.droplet_ids == [] }}"
    msg: "{{ volume_create_snapshot }}"

- name: volume | attach | by id
  doboto_volume:
    action: attach
    id: "{{ volume_create.volume.id }}"
    droplet_id: "{{ volume_droplet.droplet.id }}"
    wait: true
  register: volume_attach_id

- name: volume | attach | by id | verify
  assert:
    that:
      - "{{ volume_attach_id.action.type == 'attach_volume' }}"
      - "{{ volume_attach_id.action.resource_type == 'backend' }}"
      - "{{ volume_attach_id.action.status == 'completed' }}"
    msg: "{{ volume_attach_id }}"

- name: volume | attach | by name
  doboto_volume:
    action: attach
    name: volume-create-snapshot
    region: nyc1
    droplet_id: "{{ volume_droplet.droplet.id }}"
    wait: true
  register: volume_attach_name

- name: volume | attach | by name | verify
  assert:
    that:
      - "{{ volume_attach_name.action.type == 'attach_volume' }}"
      - "{{ volume_attach_name.action.resource_type == 'backend' }}"
      - "{{ volume_attach_name.action.status == 'completed' }}"
    msg: "{{ volume_attach_name }}"

- name: volume | detach | by id
  doboto_volume:
    action: detach
    id: "{{ volume_create.volume.id }}"
    droplet_id: "{{ volume_droplet.droplet.id }}"
    wait: true
  register: volume_detach_id

- name: volume | detach | by id | verify
  assert:
    that:
      - "{{ volume_detach_id.action.type == 'detach_volume' }}"
      - "{{ volume_detach_id.action.resource_type == 'backend' }}"
      - "{{ volume_detach_id.action.status == 'completed' }}"
    msg: "{{ volume_detach_id }}"

- name: volume | detach | by name
  doboto_volume:
    action: detach
    name: volume-create-snapshot
    region: nyc1
    droplet_id: "{{ volume_droplet.droplet.id }}"
    wait: true
  register: volume_detach_name

- name: volume | detach | by name | verify
  assert:
    that:
      - "{{ volume_detach_name.action.type == 'detach_volume' }}"
      - "{{ volume_detach_name.action.resource_type == 'backend' }}"
      - "{{ volume_detach_name.action.status == 'completed' }}"
    msg: "{{ volume_detach_name }}"

- name: volume | resize
  doboto_volume:
    action: resize
    id: "{{ volume_create.volume.id }}"
    size_gigabytes: 3
  register: volume_resize

- name: volume | resize | verify
  assert:
    that:
      - "{{ volume_resize.action.type == 'resize_volume' }}"
      - "{{ volume_resize.action.resource_type == 'backend' }}"
      - "{{ volume_resize.action.status == 'completed' }}"
    msg: "{{ volume_resize }}"

- name: volume | action | list
  doboto_volume:
    action: action_list
    id: "{{ volume_create.volume.id }}"
  register: volume_action_list

- name: volume | action | list | verify
  assert:
    that:
      - "{{ volume_action_list|length > 0 }}"
    msg: "{{ volume_action_list }}"

- name: volume | action | info
  doboto_volume:
    action: action_info
    id: "{{ volume_create.volume.id }}"
    action_id: "{{ volume_attach_id.action.id }}"
  register: volume_action_info

- name: volume | action | info | verify
  assert:
    that:
      - "{{ volume_action_info.action.type == 'attach_volume' }}"
      - "{{ volume_action_info.action.resource_type == 'backend' }}"
      - "{{ volume_action_info.action.status == 'completed' }}"
    msg: "{{ volume_action_info }}"

- name: volume | destroy | by id
  doboto_volume:
    action: destroy
    id: "{{ volume_create.volume.id }}"
  register: volume_destroy_id

- name: volume | destroy | by id | verify
  assert:
    that:
      - "{{ volume_destroy_id.result is none }}"
    msg: "{{ volume_destroy_id }}"

- name: volume | destroy | by name region
  doboto_volume:
    action: destroy
    name: volume-create-snapshot
    region: nyc1
  register: volume_destroy_name_region

- name: volume | destroy | by name region | verify
  assert:
    that:
      - "{{ volume_destroy_name_region.result is none }}"
    msg: "{{ volume_destroy_name_region }}"
